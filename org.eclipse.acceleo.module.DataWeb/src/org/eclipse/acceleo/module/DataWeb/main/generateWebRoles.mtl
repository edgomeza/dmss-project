[comment encoding = UTF-8 /]
[module generateWebRoles('http://www.unex.es/dmss/dataweb')]

[template public generateWebRoles(app : Aplicacion)]
[for (rol : Rol | app.roles)]
[file ('web/'+rol.nombre.toLowerCase()+'/dashboard.html', false, 'UTF-8')]
<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>[app.nombre/] - Panel de [rol.nombre/]</title>
    <meta name="description" content="Panel de control para [rol.nombre/] en [app.nombre/]">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700;800&family=Poppins:wght@400;500;600;700;800&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="../assets/css/style.css">
    
    <!-- Enhanced Styles -->
    <style>
        :root {
            --gradient-primary: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            --gradient-secondary: linear-gradient(135deg, #f093fb 0%, #f5576c 100%);
            --gradient-success: linear-gradient(135deg, #4facfe 0%, #00f2fe 100%);
            --gradient-warning: linear-gradient(135deg, #43e97b 0%, #38f9d7 100%);
            --gradient-danger: linear-gradient(135deg, #fa709a 0%, #fee140 100%);
            --gradient-dark: linear-gradient(135deg, #434343 0%, #000000 100%);
            --glassmorphism: rgba(255, 255, 255, 0.25);
            --glassmorphism-border: rgba(255, 255, 255, 0.18);
            --neon-blue: #00d4ff;
            --neon-purple: #b847ff;
            --shadow-neon: 0 0 30px rgba(0, 212, 255, 0.3);
            --shadow-luxury: 0 25px 50px -12px rgba(0, 0, 0, 0.25);
        }
        
        body {
            font-family: 'Inter', sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 50%, #f093fb 100%);
            min-height: 100vh;
            position: relative;
            overflow-x: hidden;
        }
        
        body::before {
            content: '';
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"><defs><pattern id="grain" width="100" height="100" patternUnits="userSpaceOnUse"><circle cx="25" cy="25" r="1" fill="rgba(255,255,255,0.1)"/><circle cx="75" cy="75" r="1" fill="rgba(255,255,255,0.05)"/><circle cx="50" cy="10" r="0.5" fill="rgba(255,255,255,0.08)"/></pattern></defs><rect width="100" height="100" fill="url(%23grain)"/></svg>');
            pointer-events: none;
            z-index: 1;
        }
        
        .app-header {
            background: var(--glassmorphism);
            backdrop-filter: blur(20px);
            -webkit-backdrop-filter: blur(20px);
            border-bottom: 1px solid var(--glassmorphism-border);
            padding: 2rem 0;
            position: relative;
            z-index: 10;
        }
        
        .app-header h1 {
            font-family: 'Poppins', sans-serif;
            font-weight: 800;
            font-size: 2.5rem;
            background: linear-gradient(45deg, #fff, #e0e7ff);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
            margin-bottom: 0.5rem;
            text-shadow: 0 0 30px rgba(255, 255, 255, 0.5);
        }
        
        .app-header p {
            color: rgba(255, 255, 255, 0.9);
            font-size: 1.1rem;
            font-weight: 400;
        }
        
        .breadcrumb {
            background: rgba(255, 255, 255, 0.1);
            backdrop-filter: blur(10px);
            border-bottom: 1px solid rgba(255, 255, 255, 0.1);
            position: relative;
            z-index: 9;
        }
        
        .breadcrumb-link {
            color: rgba(255, 255, 255, 0.8);
            text-decoration: none;
            transition: all 0.3s ease;
        }
        
        .breadcrumb-link:hover {
            color: white;
            text-shadow: 0 0 10px rgba(255, 255, 255, 0.8);
        }
        
        .main-content {
            position: relative;
            z-index: 5;
            padding: 2rem 0;
        }
        
        .card {
            background: var(--glassmorphism);
            backdrop-filter: blur(20px);
            -webkit-backdrop-filter: blur(20px);
            border: 1px solid var(--glassmorphism-border);
            border-radius: 20px;
            box-shadow: var(--shadow-luxury);
            transition: all 0.4s cubic-bezier(0.25, 0.8, 0.25, 1);
            position: relative;
            overflow: hidden;
        }
        
        .card::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            height: 1px;
            background: linear-gradient(90deg, transparent, rgba(255,255,255,0.8), transparent);
            opacity: 0;
            transition: opacity 0.3s ease;
        }
        
        .card:hover::before {
            opacity: 1;
        }
        
        .card:hover {
            transform: translateY(-8px);
            box-shadow: 0 32px 64px -12px rgba(0, 0, 0, 0.35);
            border-color: rgba(255, 255, 255, 0.3);
        }
        
        .hero-card {
            background: linear-gradient(135deg, rgba(255,255,255,0.4) 0%, rgba(255,255,255,0.1) 100%);
            border: 1px solid rgba(255,255,255,0.3);
        }
        
        .alert-success {
            background: linear-gradient(135deg, rgba(67, 233, 123, 0.2) 0%, rgba(56, 249, 215, 0.2) 100%);
            border: 1px solid rgba(67, 233, 123, 0.3);
            color: white;
            border-radius: 15px;
            backdrop-filter: blur(10px);
        }
        
        .stat-card {
            background: var(--glassmorphism);
            backdrop-filter: blur(15px);
            border: 1px solid var(--glassmorphism-border);
            border-radius: 16px;
            padding: 1.5rem;
            transition: all 0.4s cubic-bezier(0.25, 0.8, 0.25, 1);
            position: relative;
            overflow: hidden;
        }
        
        .stat-card::before {
            content: '';
            position: absolute;
            top: -50%;
            left: -50%;
            width: 200%;
            height: 200%;
            background: linear-gradient(45deg, transparent, rgba(255,255,255,0.1), transparent);
            transform: rotate(45deg);
            transition: all 0.6s ease;
            opacity: 0;
        }
        
        .stat-card:hover::before {
            opacity: 1;
            transform: rotate(45deg) translate(50%, 50%);
        }
        
        .stat-card:hover {
            transform: translateY(-12px) scale(1.02);
            box-shadow: var(--shadow-neon);
            border-color: var(--neon-blue);
        }
        
        .stat-icon {
            width: 4rem;
            height: 4rem;
            background: var(--gradient-primary);
            border-radius: 20px;
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            margin-bottom: 1rem;
            box-shadow: 0 10px 20px rgba(102, 126, 234, 0.3);
            transition: all 0.3s ease;
        }
        
        .stat-card:hover .stat-icon {
            transform: scale(1.1) rotate(5deg);
            box-shadow: 0 15px 30px rgba(102, 126, 234, 0.5);
        }
        
        .stat-number {
            font-family: 'Poppins', sans-serif;
            font-size: 2.5rem;
            font-weight: 800;
            background: linear-gradient(45deg, #fff, #e0e7ff);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
            line-height: 1;
            margin-bottom: 0.5rem;
        }
		
		.stat-number2 {
            font-family: 'Poppins', sans-serif;
            font-size: 1rem;
            font-weight: 800;
            background: linear-gradient(45deg, #fff, #e0e7ff);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
            line-height: 1;
            margin-bottom: 2.5rem;
        }
        
        .stat-label {
            color: rgba(255, 255, 255, 0.8);
            font-weight: 500;
            font-size: 0.95rem;
        }
        
        .admin-section {
            position: relative;
        }
        
        .admin-card {
            background: linear-gradient(135deg, rgba(184, 71, 255, 0.1) 0%, rgba(0, 212, 255, 0.1) 100%);
            border: 1px solid rgba(184, 71, 255, 0.2);
            border-radius: 16px;
            padding: 1.5rem;
            transition: all 0.4s ease;
            position: relative;
            overflow: hidden;
        }
        
        .admin-card::before {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(90deg, transparent, rgba(255,255,255,0.1), transparent);
            transition: left 0.6s ease;
        }
        
        .admin-card:hover::before {
            left: 100%;
        }
        
        .admin-card:hover {
            transform: translateY(-8px);
            box-shadow: 0 20px 40px rgba(184, 71, 255, 0.2);
            border-color: var(--neon-purple);
        }
        
        .admin-icon {
            width: 3rem;
            height: 3rem;
            background: var(--gradient-secondary);
            border-radius: 12px;
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            margin-bottom: 1rem;
            box-shadow: 0 8px 16px rgba(240, 147, 251, 0.3);
        }
        
        .entity-card {
            background: var(--glassmorphism);
            backdrop-filter: blur(15px);
            border: 1px solid var(--glassmorphism-border);
            border-radius: 16px;
            transition: all 0.4s cubic-bezier(0.25, 0.8, 0.25, 1);
            position: relative;
            overflow: hidden;
        }
        
        .entity-card::after {
            content: '';
            position: absolute;
            bottom: 0;
            left: 0;
            right: 0;
            height: 3px;
            background: var(--gradient-primary);
            transform: scaleX(0);
            transition: transform 0.3s ease;
            transform-origin: left;
        }
        
        .entity-card:hover::after {
            transform: scaleX(1);
        }
        
        .entity-card:hover {
            transform: translateY(-12px);
            box-shadow: 0 25px 50px rgba(0, 0, 0, 0.2);
            border-color: rgba(255, 255, 255, 0.4);
        }
        
        .entity-icon {
            width: 3rem;
            height: 3rem;
            background: var(--gradient-success);
            border-radius: 12px;
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            margin-right: 1rem;
            box-shadow: 0 8px 16px rgba(79, 172, 254, 0.3);
        }
        
        .btn {
            font-weight: 600;
            border-radius: 12px;
            padding: 0.75rem 1.5rem;
            transition: all 0.3s cubic-bezier(0.25, 0.8, 0.25, 1);
            position: relative;
            overflow: hidden;
            text-transform: none;
            letter-spacing: 0.5px;
        }
        
        .btn::before {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(90deg, transparent, rgba(255,255,255,0.2), transparent);
            transition: left 0.5s ease;
        }
        
        .btn:hover::before {
            left: 100%;
        }
        
        .btn-primary {
            background: var(--gradient-primary);
            border: none;
            color: white;
            box-shadow: 0 8px 16px rgba(102, 126, 234, 0.3);
        }
        
        .btn-primary:hover {
            transform: translateY(-2px);
            box-shadow: 0 12px 24px rgba(102, 126, 234, 0.4);
        }
        
        .btn-outline-primary {
            background: transparent;
            border: 2px solid rgba(255, 255, 255, 0.3);
            color: white;
            backdrop-filter: blur(10px);
        }
        
        .btn-outline-primary:hover {
            background: rgba(255, 255, 255, 0.1);
            border-color: white;
            transform: translateY(-2px);
            box-shadow: 0 8px 16px rgba(255, 255, 255, 0.2);
        }
        
        .btn-outline-info {
            background: transparent;
            border: 2px solid rgba(79, 172, 254, 0.5);
            color: white;
        }
        
        .btn-outline-info:hover {
            background: var(--gradient-success);
            border-color: transparent;
            transform: translateY(-2px);
        }
        
        .btn-outline-success {
            background: transparent;
            border: 2px solid rgba(67, 233, 123, 0.5);
            color: white;
        }
        
        .btn-outline-success:hover {
            background: var(--gradient-warning);
            border-color: transparent;
            transform: translateY(-2px);
        }
        
        .assessment-item {
            background: var(--glassmorphism);
            backdrop-filter: blur(15px);
            border: 1px solid var(--glassmorphism-border);
            border-radius: 16px;
            padding: 1.5rem;
            margin-bottom: 1rem;
            transition: all 0.4s ease;
            position: relative;
            overflow: hidden;
        }
        
        .assessment-item::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: linear-gradient(45deg, rgba(255,255,255,0.1), transparent);
            opacity: 0;
            transition: opacity 0.3s ease;
        }
        
        .assessment-item:hover::before {
            opacity: 1;
        }
        
        .assessment-item:hover {
            transform: translateY(-8px);
            box-shadow: 0 20px 40px rgba(0, 0, 0, 0.15);
            border-color: rgba(255, 255, 255, 0.4);
        }
        
        .assessment-badge {
            background: linear-gradient(45deg, var(--neon-blue), var(--neon-purple));
            color: white;
            padding: 0.5rem 1rem;
            border-radius: 20px;
            font-size: 0.8rem;
            font-weight: 600;
            box-shadow: 0 4px 8px rgba(0, 212, 255, 0.3);
            margin-top: 0.5rem;
            display: inline-block;
        }
        
        .link-item {
            background: var(--glassmorphism);
            backdrop-filter: blur(15px);
            border: 1px solid var(--glassmorphism-border);
            border-radius: 16px;
            padding: 1.5rem;
            text-decoration: none;
            color: white;
            transition: all 0.4s ease;
            position: relative;
            overflow: hidden;
        }
        
        .link-item::after {
            content: '';
            position: absolute;
            top: 0;
            right: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(90deg, transparent, rgba(255,255,255,0.1), transparent);
            transition: right 0.6s ease;
        }
        
        .link-item:hover::after {
            right: 100%;
        }
        
        .link-item:hover {
            transform: translateX(8px);
            border-color: rgba(255, 255, 255, 0.4);
            text-decoration: none;
            color: white;
        }
        
        .link-icon {
            width: 3rem;
            height: 3rem;
            background: var(--gradient-warning);
            border-radius: 12px;
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            margin-right: 1rem;
            box-shadow: 0 8px 16px rgba(67, 233, 123, 0.3);
        }
        
        .social-section {
            background: var(--glassmorphism);
            backdrop-filter: blur(20px);
            border: 1px solid var(--glassmorphism-border);
            border-radius: 20px;
            padding: 2rem;
            box-shadow: var(--shadow-luxury);
        }
        
        .social-header {
            display: flex;
            align-items: center;
            margin-bottom: 1.5rem;
            color: white;
        }
        
        .social-icon {
            width: 3rem;
            height: 3rem;
            background: var(--gradient-danger);
            border-radius: 12px;
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            margin-right: 1rem;
            box-shadow: 0 8px 16px rgba(250, 112, 154, 0.3);
        }
        
        .loading-spinner {
            width: 40px;
            height: 40px;
            border: 4px solid rgba(255, 255, 255, 0.3);
            border-top: 4px solid white;
            border-radius: 50%;
            animation: luxurySpin 1s linear infinite;
        }
        
        @keyframes luxurySpin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }
        
        .card-header h2, .card-header h3, .card-header h4 {
            color: black;
            font-family: 'Poppins', sans-serif;
            font-weight: 700;
        }
        
        .card-body p, .card-body {
            color: rgba(255, 255, 255, 0.9);
        }
        
        .empty-message, .error-message p {
            color: rgba(255, 255, 255, 0.7);
        }
        
        .section-title {
            color: white;
            font-family: 'Poppins', sans-serif;
            font-weight: 600;
            border-bottom: 2px solid rgba(255, 255, 255, 0.2);
        }
        
        /* Floating Animation */
        @keyframes float {
            0%, 100% { transform: translateY(0px); }
            50% { transform: translateY(-10px); }
        }
        
        .stat-card:nth-child(1) { animation: float 6s ease-in-out infinite; }
        .stat-card:nth-child(2) { animation: float 6s ease-in-out infinite 1.5s; }
        .stat-card:nth-child(3) { animation: float 6s ease-in-out infinite 3s; }
        .stat-card:nth-child(4) { animation: float 6s ease-in-out infinite 4.5s; }
        
        /* Responsive Enhancements */
        @media (max-width: 768px) {
            .app-header h1 {
                font-size: 2rem;
            }
            
            .stat-number {
                font-size: 2rem;
            }
            
            .stat-card {
                padding: 1rem;
            }
            
            .card {
                margin-bottom: 1.5rem;
            }
        }
        
        /* Dark mode compatibility */
        @media (prefers-color-scheme: dark) {
            .card-header h2, .card-header h3, .card-header h4 {
                color: #000000;
            }
        }
        
        /* High contrast mode */
        @media (prefers-contrast: high) {
            .card {
                border-width: 2px;
            }
            
            .btn {
                border-width: 2px;
            }
        }
        
        /* Reduced motion */
        @media (prefers-reduced-motion: reduce) {
            * {
                animation-duration: 0.01ms !important;
                animation-iteration-count: 1 !important;
                transition-duration: 0.01ms !important;
            }
        }
    </style>
</head>
<body>
    <!-- Animated Background Elements -->
    <div class="floating-elements">
        <div class="floating-element" style="top: 10%; left: 10%; animation-delay: 0s;"></div>
        <div class="floating-element" style="top: 20%; right: 20%; animation-delay: 2s;"></div>
        <div class="floating-element" style="bottom: 30%; left: 15%; animation-delay: 4s;"></div>
        <div class="floating-element" style="bottom: 20%; right: 10%; animation-delay: 6s;"></div>
    </div>

    <!-- Header del Panel -->
    <header class="app-header">
        <div class="container">
            <h1>[app.nombre/] - [rol.nombre/]</h1>
            <p>[if (rol.descripcion.oclIsUndefined() = false)][rol.descripcion/][else]Panel de control premium para usuarios con rol [rol.nombre/][/if]</p>
        </div>
    </header>
    
    <!-- Breadcrumb -->
    <nav class="breadcrumb">
        <div class="container">
            <ul class="breadcrumb-list">
                <li class="breadcrumb-item">
                    <a href="../index.html" class="breadcrumb-link">🏠 Inicio</a>
                </li>
                <li class="breadcrumb-item">
                    <span>👤 [rol.nombre/]</span>
                </li>
                <li class="breadcrumb-item">
                    <span>📊 Dashboard</span>
                </li>
            </ul>
        </div>
    </nav>
    
    <!-- Contenido Principal -->
    <main class="main-content">
        <div class="container">
            <!-- Alert de Bienvenida -->
            <div class="alert alert-success" data-auto-dismiss="true">
                <strong>✨ ¡Bienvenido!</strong> Has iniciado sesión correctamente como <strong>[rol.nombre/]</strong>. Tu experiencia premium te espera.
            </div>

			[let maxPages : Integer = app.roles->collect(r | r.paginasAccesibles->size())->max()]
			[let maxEntidades : Integer = app.roles->collect(r | r.numeroEntidadesAccesibles)->max()]
			[let isAdminRole : Boolean = rol.paginasAccesibles->size() = maxPages or (rol.paginasAccesibles->size() < maxPages and rol.numeroEntidadesAccesibles = maxEntidades)]
			[if (isAdminRole)]
			<section class="admin-section mb-8">
			    <div class="card">
			        <div class="card-header">
			            <h3>🛡️ Panel de Administración Premium</h3>
			            <p>Herramientas exclusivas con funcionalidades avanzadas para roles administrativos</p>
			        </div>
			        <div class="card-body">
			            <div class="admin-tools grid grid-cols-1 md:grid-cols-2 gap-6">
			                <div class="admin-card">
			                    <div class="admin-icon">
			                        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
			                            <path d="M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z"></path>
			                            <polyline points="14,2 14,8 20,8"></polyline>
			                            <line x1="16" y1="13" x2="8" y2="13"></line>
			                            <line x1="16" y1="17" x2="8" y2="17"></line>
			                        </svg>
			                    </div>
			                    <div class="admin-content">
			                        <h4>📋 Gestión de Encuestas</h4>
			                        <p>Administra encuestas con analytics avanzados y reportes detallados</p>
			                        <a href="../admin/surveys-admin.html" class="btn btn-primary btn-sm">
			                            ✨ Administrar Encuestas
			                        </a>
			                    </div>
			                </div>
			                <div class="admin-card">
			                    <div class="admin-icon">
			                        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
			                            <circle cx="12" cy="12" r="10"></circle>
			                            <path d="m9 12 2 2 4-4"></path>
			                        </svg>
			                    </div>
			                    <div class="admin-content">
			                        <h4>🎯 Gestión de Cuestionarios</h4>
			                        <p>Control total sobre evaluaciones y métricas de rendimiento</p>
			                        <a href="../admin/quizzes-admin.html" class="btn btn-primary btn-sm">
			                            🚀 Administrar Cuestionarios
			                        </a>
			                    </div>
			                </div>
			            </div>
			        </div>
			    </div>
			</section>
			[/if]
			[/let]
			[/let]
			[/let]
            
            <!-- Dashboard Overview -->
            <section class="dashboard-overview mb-8">
                <div class="card hero-card">
                    <div class="card-header">
                        <h2>🎨 Panel de Control Premium - [rol.nombre/]</h2>
                        <p>Dashboard inteligente con métricas en tiempo real y acceso personalizado</p>
                    </div>
                    <div class="card-body">
                        <div class="dashboard-stats grid grid-cols-1 md:grid-cols-4 gap-6">
                            <div class="stat-card">
                                <div class="stat-icon">
                                    <svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                                        <rect x="3" y="3" width="18" height="18" rx="2" ry="2"></rect>
                                        <rect x="7" y="7" width="3" height="9"></rect>
                                        <rect x="14" y="7" width="3" height="5"></rect>
                                    </svg>
                                </div>
                                <div class="stat-content">
                                    <div class="stat-number">[app.entidades->select(e | rol.paginasAccesibles->exists(p | p.oclIsKindOf(PaginaCRUD) and p.oclAsType(PaginaCRUD).entidad = e))->size()/]</div>
                                    <div class="stat-label">🏢 Entidades Gestionadas</div>
                                </div>
                            </div>
                            
                            <div class="stat-card">
                                <div class="stat-icon">
                                    <svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                                        <path d="M16 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2"></path>
                                        <circle cx="8.5" cy="7" r="4"></circle>
                                        <path d="m22 2-5 10-5-5 10-5z"></path>
                                    </svg>
                                </div>
                                <div class="stat-content">
                                    <div class="stat-number2">[rol.nombre/]</div>
                                    <div class="stat-label">👤 Rol Premium</div>
                                </div>
                            </div>
                            
                            <div class="stat-card">
                                <div class="stat-icon">
                                    <svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                                        <circle cx="12" cy="12" r="10"></circle>
                                        <polyline points="12,6 12,12 16,14"></polyline>
                                    </svg>
                                </div>
                                <div class="stat-content">
                                    <div class="stat-number" id="current-time">--:--</div>
                                    <div class="stat-label">🕐 Tiempo Real</div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </section>
            
			<!-- Contenido por Entidades -->
            <section class="entities-section mb-8">
                <div class="card">
                    <div class="card-header">
                        <h3>🏭 Entidades de Datos Premium</h3>
                        <p>Gestión avanzada de información con interfaz intuitiva y funcionalidades completas</p>
                    </div>
                    <div class="card-body">
                        <div class="entities-grid grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
                            [for (entidad : Entidad | app.entidades->select(e | rol.paginasAccesibles->exists(p | p.oclIsKindOf(PaginaCRUD) and p.oclAsType(PaginaCRUD).entidad = e)))]
                            <div class="entity-card card animate-target">
                                <div class="card-header">
                                    <div class="entity-icon">
                                        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                                            <rect x="3" y="3" width="18" height="18" rx="2" ry="2"></rect>
                                            <rect x="7" y="7" width="3" height="9"></rect>
                                            <rect x="14" y="7" width="3" height="5"></rect>
                                        </svg>
                                    </div>
                                    <h4>📊 [entidad.nombre/]</h4>
                                </div>
                                <div class="card-body">
                                    <div class="entity-info">
                                        <div class="entity-stat">
                                            <span class="entity-stat-label">🔧 Atributos:</span>
                                            <span class="entity-stat-value">[entidad.atributos->size()/]</span>
                                        </div>
                                        [if (not entidad.referencias->isEmpty())]
                                        <div class="entity-stat">
                                            <span class="entity-stat-label">🔗 Referencias:</span>
                                            <span class="entity-stat-value">[entidad.referencias->size()/]</span>
                                        </div>
                                        [/if]
                                    </div>
                                    <div class="entity-operations">
                                        <a href="pages/[entidad.nombre.toLowerCase()/]/index.html" class="btn btn-outline btn-outline-primary btn-sm">
                                            <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                                                <path d="M3 6h18"></path>
                                                <path d="M3 12h18"></path>
                                                <path d="M3 18h18"></path>
                                            </svg>
                                            ⚡ Gestionar
                                        </a>
                                        <a href="pages/[entidad.nombre.toLowerCase()/]/list.html" class="btn btn-outline btn-outline-info btn-sm">
                                            <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                                                <path d="M3 6h18"></path>
                                                <path d="M3 12h18"></path>
                                                <path d="M3 18h18"></path>
                                            </svg>
                                            📋 Listar
                                        </a>
                                        <a href="pages/[entidad.nombre.toLowerCase()/]/create.html" class="btn btn-outline btn-outline-success btn-sm">
                                            <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                                                <circle cx="12" cy="12" r="10"></circle>
                                                <line x1="12" y1="8" x2="12" y2="16"></line>
                                                <line x1="8" y1="12" x2="16" y2="12"></line>
                                            </svg>
                                            ✨ Crear
                                        </a>
                                    </div>
                                </div>
                            </div>
                            [/for]
                        </div>
                    </div>
                </div>
            </section>
            
            <!-- Encuestas y Cuestionarios accesibles -->
            <section class="surveys-quizzes mb-8">
                <div class="card">
                    <div class="card-header">
                        <h3>🎯 Centro de Evaluaciones Premium</h3>
                        <p>Participa en encuestas interactivas y cuestionarios de evaluación personalizados</p>
                    </div>
                    <div class="card-body">
                        <div class="assessments-grid grid grid-cols-1 md:grid-cols-2 gap-6">
                            <div class="surveys-list">
                                <h4 class="section-title">📋 Encuestas Interactivas</h4>
                                <div class="assessment-list" id="roleSurveys">
                                    <div class="loading">
                                        <div class="loading-spinner"></div>
                                        <span>✨ Cargando encuestas premium...</span>
                                    </div>
                                </div>
                            </div>
                            
                            <div class="quizzes-list">
                                <h4 class="section-title">🏆 Cuestionarios de Evaluación</h4>
                                <div class="assessment-list" id="roleQuizzes">
                                    <div class="loading">
                                        <div class="loading-spinner"></div>
                                        <span>🚀 Cargando evaluaciones...</span>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </section>
            
            <!-- Información del Sistema -->
            <div class="system-info grid grid-cols-1 lg:grid-cols-2 gap-6 mb-8">
                <!-- Enlaces Útiles -->
                <div class="useful-links card">
                    <div class="card-header">
                        <h3>🔗 Accesos Rápidos</h3>
                    </div>
                    <div class="card-body">
                        <div class="links-list">
                            <a href="../index.html" class="link-item">
                                <div class="link-icon">
                                    <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                                        <path d="M3 9l9-7 9 7v11a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z"></path>
                                        <polyline points="9,22 9,12 15,12 15,22"></polyline>
                                    </svg>
                                </div>
                                <div class="link-content">
                                    <h4>🏠 Página Principal</h4>
                                    <p>Regresa al hub central del sistema</p>
                                </div>
                            </a>
                            
                            [if (not app.encuestas->isEmpty())]
                            <a href="../surveys/index.html" class="link-item">
                                <div class="link-icon">
                                    <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                                        <path d="M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z"></path>
                                        <polyline points="14,2 14,8 20,8"></polyline>
                                        <line x1="16" y1="13" x2="8" y2="13"></line>
                                        <line x1="16" y1="17" x2="8" y2="17"></line>
                                    </svg>
                                </div>
                                <div class="link-content">
                                    <h4>📋 Centro de Encuestas</h4>
                                    <p>Explora y participa en encuestas disponibles</p>
                                </div>
                            </a>
                            [/if]
                            
                            [if (not app.cuestionarios->isEmpty())]
                            <a href="../quizzes/index.html" class="link-item">
                                <div class="link-icon">
                                    <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                                        <circle cx="12" cy="12" r="10"></circle>
                                        <path d="m9 12 2 2 4-4"></path>
                                    </svg>
                                </div>
                                <div class="link-content">
                                    <h4>🎯 Portal de Evaluaciones</h4>
                                    <p>Accede a cuestionarios y pruebas de conocimiento</p>
                                </div>
                            </a>
                            [/if]
                        </div>
                    </div>
                </div>
                
                <!-- Redes Sociales -->
                [if (not app.redesSociales->isEmpty())]
                <div class="social-section">
                    <div class="social-header">
                        <div class="social-icon">
                            <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                                <path d="M23 3a10.9 10.9 0 0 1-3.14 1.53 4.48 4.48 0 0 0-7.86 3v1A10.66 10.66 0 0 1 3 4s-4 9 5 13a11.64 11.64 0 0 1-7 2c9 5 20 0 20-11.5a4.5 4.5 0 0 0-.08-.83A7.72 7.72 0 0 0 23 3z"></path>
                            </svg>
                        </div>
                        <h3>🌐 Conecta con Nosotros</h3>
                    </div>
                    <div class="social-feeds">
                        [if (app.redesSociales->size() > 0)]
                        [let redSocial : RedSocial = app.redesSociales->asSequence()->first()]
                        <div class="social-feed">
                            <h4>✨ [redSocial.tipo/]: @[redSocial.nombreCuenta/]</h4>
                            <div class="social-content">
                                [redSocial.codigoEmbed/]
                            </div>
                        </div>
                        [/let]
                        [/if]
                    </div>
                </div>
                [/if]
            </div>

    <!-- Estilos CSS Organizados -->
    <style>
        /* ============================
           VARIABLES CSS PREMIUM
           ============================ */
        :root {
            --gradient-primary: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            --gradient-secondary: linear-gradient(135deg, #f093fb 0%, #f5576c 100%);
            --gradient-success: linear-gradient(135deg, #4facfe 0%, #00f2fe 100%);
            --gradient-warning: linear-gradient(135deg, #43e97b 0%, #38f9d7 100%);
            --gradient-danger: linear-gradient(135deg, #fa709a 0%, #fee140 100%);
            
            --glassmorphism: rgba(255, 255, 255, 0.25);
            --glassmorphism-border: rgba(255, 255, 255, 0.18);
            
            --neon-blue: #00d4ff;
            --neon-purple: #b847ff;
            
            --shadow-luxury: 0 25px 50px -12px rgba(0, 0, 0, 0.25);
            --shadow-neon: 0 0 30px rgba(0, 212, 255, 0.3);
            
            --transition-smooth: all 0.4s cubic-bezier(0.25, 0.8, 0.25, 1);
        }

        /* ============================
           ESTRUCTURA BASE
           ============================ */
        .system-info {
            position: relative;
            z-index: 5;
        }

        .useful-links {
            background: var(--glassmorphism);
            backdrop-filter: blur(20px);
            -webkit-backdrop-filter: blur(20px);
            border: 1px solid var(--glassmorphism-border);
            border-radius: 20px;
            box-shadow: var(--shadow-luxury);
            transition: var(--transition-smooth);
            overflow: hidden;
        }

        .useful-links:hover {
            transform: translateY(-8px);
            box-shadow: 0 32px 64px -12px rgba(0, 0, 0, 0.35);
            border-color: rgba(255, 255, 255, 0.3);
        }

        /* ============================
           ENLACES DE NAVEGACIÓN
           ============================ */
        .links-list {
            display: flex;
            flex-direction: column;
            gap: 1rem;
        }

        .link-item {
            display: flex;
            align-items: center;
            padding: 1.5rem;
            text-decoration: none;
            color: white;
            background: var(--glassmorphism);
            backdrop-filter: blur(15px);
            border: 1px solid var(--glassmorphism-border);
            border-radius: 16px;
            transition: var(--transition-smooth);
            position: relative;
            overflow: hidden;
        }

        .link-item::after {
            content: '';
            position: absolute;
            top: 0;
            right: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(90deg, transparent, rgba(255,255,255,0.1), transparent);
            transition: right 0.6s ease;
        }

        .link-item:hover {
            transform: translateX(8px);
            border-color: rgba(255, 255, 255, 0.4);
            text-decoration: none;
            color: white;
            box-shadow: 0 12px 24px rgba(0, 0, 0, 0.15);
        }

        .link-item:hover::after {
            right: 100%;
        }

        /* ============================
           ICONOS DE ENLACES
           ============================ */
        .link-icon {
            width: 3rem;
            height: 3rem;
            background: var(--gradient-warning);
            border-radius: 12px;
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            margin-right: 1rem;
            box-shadow: 0 8px 16px rgba(67, 233, 123, 0.3);
            transition: var(--transition-smooth);
        }

        .link-item:hover .link-icon {
            transform: scale(1.1) rotate(5deg);
            box-shadow: 0 12px 20px rgba(67, 233, 123, 0.5);
        }

        /* ============================
           CONTENIDO DE ENLACES
           ============================ */
        .link-content {
            flex: 1;
        }

        .link-content h4 {
            margin: 0 0 0.25rem;
            color: white;
            font-size: 1rem;
            font-weight: 600;
            font-family: 'Poppins', sans-serif;
        }

        .link-content p {
            margin: 0;
            color: rgba(255, 255, 255, 0.8);
            font-size: 0.875rem;
            line-height: 1.4;
        }

        /* ============================
           SECCIÓN REDES SOCIALES
           ============================ */
        .social-section {
            background: var(--glassmorphism);
            backdrop-filter: blur(20px);
            -webkit-backdrop-filter: blur(20px);
            border: 1px solid var(--glassmorphism-border);
            border-radius: 20px;
            padding: 2rem;
            box-shadow: var(--shadow-luxury);
            transition: var(--transition-smooth);
        }

        .social-section:hover {
            transform: translateY(-8px);
            box-shadow: 0 32px 64px -12px rgba(0, 0, 0, 0.35);
            border-color: rgba(255, 255, 255, 0.3);
        }

        .social-header {
            display: flex;
            align-items: center;
            margin-bottom: 1.5rem;
            color: white;
        }

        .social-header h3 {
            margin: 0;
            font-family: 'Poppins', sans-serif;
            font-weight: 700;
        }

        .social-icon {
            width: 3rem;
            height: 3rem;
            background: var(--gradient-danger);
            border-radius: 12px;
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            margin-right: 1rem;
            box-shadow: 0 8px 16px rgba(250, 112, 154, 0.3);
            transition: var(--transition-smooth);
        }

        .social-section:hover .social-icon {
            transform: scale(1.1) rotate(-5deg);
            box-shadow: 0 12px 20px rgba(250, 112, 154, 0.5);
        }

        .social-feed h4 {
            color: white;
            margin-bottom: 1rem;
            font-family: 'Poppins', sans-serif;
            font-weight: 600;
        }

        .social-content {
            background: rgba(255, 255, 255, 0.1);
            border-radius: 12px;
            padding: 1rem;
            border: 1px solid rgba(255, 255, 255, 0.15);
        }

        /* ============================
           EFECTOS RESPONSIVE
           ============================ */
        @media (max-width: 1024px) {
            .system-info {
                grid-template-columns: 1fr;
                gap: 2rem;
            }
        }

        @media (max-width: 768px) {
            .link-item {
                padding: 1rem;
            }
            
            .link-icon {
                width: 2.5rem;
                height: 2.5rem;
                margin-right: 0.75rem;
            }
            
            .link-content h4 {
                font-size: 0.9rem;
            }
            
            .link-content p {
                font-size: 0.8rem;
            }
            
            .social-section {
                padding: 1.5rem;
            }
        }

        /* ============================
           ACCESIBILIDAD
           ============================ */
        @media (prefers-reduced-motion: reduce) {
            .link-item,
            .social-section,
            .useful-links,
            .link-icon,
            .social-icon {
                transition: none;
                animation: none;
            }
        }

        @media (prefers-contrast: high) {
            .link-item,
            .social-section,
            .useful-links {
                border-width: 2px;
            }
        }

        /* ============================
           MODO OSCURO
           ============================ */
        @media (prefers-color-scheme: dark) {
            .link-content h4,
            .social-header h3,
            .social-feed h4 {
                color: #f8fafc;
            }
        }
    </style>
    </main>
    
    <!-- Footer -->
    <footer class="app-footer">
        <div class="container">
            <div class="footer-bottom">
                <p>&copy; 2025 [app.nombre/] - Panel Premium de [rol.nombre/] ✨</p>
            </div>
        </div>
    </footer>
    
    <!-- Floating Elements CSS -->
    <style>
        .floating-elements {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            pointer-events: none;
            z-index: 1;
        }
        
        .floating-element {
            position: absolute;
            width: 20px;
            height: 20px;
            background: linear-gradient(45deg, rgba(255,255,255,0.1), rgba(255,255,255,0.3));
            border-radius: 50%;
            animation: floatUpDown 8s ease-in-out infinite;
            box-shadow: 0 0 20px rgba(255,255,255,0.2);
        }
        
        @keyframes floatUpDown {
            0%, 100% { 
                transform: translateY(0px) rotate(0deg);
                opacity: 0.7;
            }
            50% { 
                transform: translateY(-30px) rotate(180deg);
                opacity: 1;
            }
        }
        
        .entity-stat-label, .entity-stat-value {
            color: rgba(255, 255, 255, 0.9);
        }
        
        .entity-stat-value {
            font-weight: 600;
        }
        
        .admin-content h4, .link-content h4 {
            color: white;
            font-weight: 600;
        }
        
        .admin-content p, .link-content p {
            color: rgba(255, 255, 255, 0.8);
        }
    </style>
    
    <!-- Scripts -->
    <script src="../assets/js/app.js"></script>
    
    <!-- Script para el dashboard -->
	<script>
	    // Actualizar hora actual con formato más elegante
	    function updateCurrentTime() {
	        const now = new Date();
	        const timeString = now.toLocaleTimeString('es-ES', { 
	            hour: '2-digit', 
	            minute: '2-digit',
	            second: '2-digit'
	        });
	        const timeElement = document.getElementById('current-time');
	        if (timeElement) {
	            timeElement.textContent = timeString;
	        }
	    }
	    
	    // Actualizar cada segundo para un efecto más dinámico
	    updateCurrentTime();
	    setInterval(updateCurrentTime, 1000);
	    
	    // Función para esperar a que la base de datos esté disponible
	    async function waitForDatabase() {
	        let attempts = 0;
	        const maxAttempts = 100;
	        
	        while (attempts < maxAttempts) {
	            if (window.localDB && window.localDB.db) {
	                return window.localDB;
	            }
	            
	            // Intentar inicializar la base de datos
	            try {
	                const request = indexedDB.open('[app.nombre.replace(' ', '_')/]_DB', 2);
	                const db = await new Promise((resolve, reject) => {
	                    request.onsuccess = () => {
	                        const database = request.result;
	                        const dbWrapper = {
	                            db: database,
	                            async getAll(storeName) {
	                                return new Promise((resolve, reject) => {
	                                    if (!database.objectStoreNames.contains(storeName)) {
	                                        resolve(['['/]]);
	                                        return;
	                                    }
	                                    const transaction = database.transaction(storeName, 'readonly');
	                                    const store = transaction.objectStore(storeName);
	                                    const request = store.getAll();
	                                    request.onsuccess = () => resolve(request.result || ['['/]]);
	                                    request.onerror = () => resolve(['['/]]);
	                                });
	                            }
	                        };
	                        window.localDB = dbWrapper;
	                        resolve(dbWrapper);
	                    };
	                    request.onerror = () => resolve(null);
	                });
	                
	                if (db) return db;
	            } catch (error) {
	                console.warn('🔄 Reintentando conexión a base de datos:', error);
	            }
	            
	            await new Promise(resolve => setTimeout(resolve, 100));
	            attempts++;
	        }
	        
	        return null;
	    }
	    
	    // Cargar encuestas y cuestionarios disponibles para este rol
	    document.addEventListener('DOMContentLoaded', async () => {
	        try {
	            // Guardar el rol actual
	            const currentRole = '[rol.nombre/]';
	            localStorage.setItem('current_role', currentRole);
	            
	            console.log('✨ Cargando evaluaciones premium para rol:', currentRole);
	            
	            // Esperar a que la base de datos esté disponible
	            const db = await waitForDatabase();
	            if (!db) {
	                console.error('❌ Base de datos no disponible');
	                return;
	            }
	            
	            // Cargar encuestas y cuestionarios desde la base de datos
	            const ['['/]surveys, quizzes] = await Promise.all(['['/]
	                db.getAll('ENCUESTAS').catch(() => ['['/]]),
	                db.getAll('CUESTIONARIOS').catch(() => ['['/]])
	            ]);
	            
	            console.log(`📊 Datos premium cargados - Encuestas: ${surveys.length}, Cuestionarios: ${quizzes.length}`);
	            
	            // Obtener asignaciones de roles
	            const surveyRoleAssignments = JSON.parse(localStorage.getItem('survey_role_assignments') || '{}');
	            const quizRoleAssignments = JSON.parse(localStorage.getItem('quiz_role_assignments') || '{}');
	            
	            // Filtrar encuestas disponibles para el rol actual
	            const availableSurveys = surveys.filter(survey => {
	                if (surveyRoleAssignments['['/]survey.nombre]) {
	                    return surveyRoleAssignments['['/]survey.nombre].includes(currentRole);
	                }
	                return true;
	            });
	            
	            // Filtrar cuestionarios disponibles para el rol actual
	            const availableQuizzes = quizzes.filter(quiz => {
	                if (quizRoleAssignments['['/]quiz.nombre]) {
	                    return quizRoleAssignments['['/]quiz.nombre].includes(currentRole);
	                }
	                return true;
	            });
	            
	            console.log(`🎯 Disponibles para ${currentRole} - Encuestas: ${availableSurveys.length}, Cuestionarios: ${availableQuizzes.length}`);
	            
	            // Contenedores
	            const surveysContainer = document.getElementById('roleSurveys');
	            const quizzesContainer = document.getElementById('roleQuizzes');
	            
	            // Mostrar encuestas con estilo premium
	            if (surveysContainer) {
	                if (availableSurveys.length === 0) {
	                    surveysContainer.innerHTML = '<p class="empty-message">✨ No hay encuestas asignadas actualmente a tu rol premium.</p>';
	                } else {
	                    surveysContainer.innerHTML = availableSurveys.map(survey => `
	                        <div class="assessment-item">
	                            <div class="assessment-info">
	                                <h5>📋 ${survey.titulo || survey.nombre}</h5>
	                                <p>${survey.descripcion || 'Encuesta premium disponible para tu rol'}</p>
	                                <span class="assessment-badge">✨ ${survey.tipoRepresentacion || 'Encuesta'}</span>
	                            </div>
	                            <button class="btn btn-primary btn-sm" onclick="openSurveyPage('${survey.nombre}')">
	                                🚀 Participar
	                            </button>
	                        </div>
	                    `).join('');
	                }
	            }
	            
	            // Mostrar cuestionarios con estilo premium
	            if (quizzesContainer) {
	                if (availableQuizzes.length === 0) {
	                    quizzesContainer.innerHTML = '<p class="empty-message">🎯 No hay cuestionarios asignados actualmente a tu rol premium.</p>';
	                } else {
	                    quizzesContainer.innerHTML = availableQuizzes.map(quiz => `
	                        <div class="assessment-item">
	                            <div class="assessment-info">
	                                <h5>🏆 ${quiz.titulo || quiz.nombre}</h5>
	                                <p>${quiz.descripcion || 'Cuestionario de evaluación premium'}</p>
	                                <span class="assessment-badge">⏱️ Evaluativo (${quiz.tiempoLimite || 30} min)</span>
	                            </div>
	                            <button class="btn btn-primary btn-sm" onclick="openQuizPage('${quiz.nombre}')">
	                                ✨ Realizar
	                            </button>
	                        </div>
	                    `).join('');
	                }
	            }
	            
	        } catch (error) {
	            console.error('❌ Error cargando evaluaciones premium:', error);
	            
	            // Mostrar mensaje de error premium
	            const surveysContainer = document.getElementById('roleSurveys');
	            const quizzesContainer = document.getElementById('roleQuizzes');
	            
	            if (surveysContainer) {
	                surveysContainer.innerHTML = `
	                    <div class="error-message">
	                        <p>⚠️ Error temporal al cargar encuestas</p>
	                        <button onclick="location.reload()" class="btn btn-sm btn-outline-primary">🔄 Reintentar</button>
	                    </div>
	                `;
	            }
	            
	            if (quizzesContainer) {
	                quizzesContainer.innerHTML = `
	                    <div class="error-message">
	                        <p>⚠️ Error temporal al cargar cuestionarios</p>
	                        <button onclick="location.reload()" class="btn btn-sm btn-outline-primary">🔄 Reintentar</button>
	                    </div>
	                `;
	            }
	        }
	    });
	    
	    // Funciones para abrir evaluaciones con efectos premium
	    function openSurveyPage(surveyName) {
	        console.log('🚀 Abriendo encuesta premium:', surveyName);
	        
	        // Intentar abrir página generada dinámicamente primero
	        if (window.pageGenerator) {
	            const surveyHTML = window.pageGenerator.getSurveyPage(surveyName);
	            if (surveyHTML) {
	                const newWindow = window.open('', '_blank');
	                newWindow.document.write(surveyHTML);
	                newWindow.document.close();
	                return;
	            }
	        }
	        
	        // Fallback a URL estática
	        const surveyURL = `../surveys/${surveyName}.html`;
	        
	        fetch(surveyURL, { method: 'HEAD' })
	            .then(response => {
	                if (response.ok) {
	                    window.location.href = surveyURL;
	                } else {
	                    alert('✨ Tu encuesta premium se está preparando. Intenta de nuevo en unos momentos.');
	                }
	            })
	            .catch(() => {
	                window.open(surveyURL, '_blank');
	            });
	    }
	    
	    function openQuizPage(quizName) {
	        console.log('🎯 Abriendo cuestionario premium:', quizName);
	        
	        // Intentar abrir página generada dinámicamente primero
	        if (window.pageGenerator) {
	            const quizHTML = window.pageGenerator.getQuizPage(quizName);
	            if (quizHTML) {
	                const newWindow = window.open('', '_blank');
	                newWindow.document.write(quizHTML);
	                newWindow.document.close();
	                return;
	            }
	        }
	        
	        // Fallback a URL estática
	        const quizURL = `../quizzes/${quizName}.html`;
	        
	        fetch(quizURL, { method: 'HEAD' })
	            .then(response => {
	                if (response.ok) {
	                    window.location.href = quizURL;
	                } else {
	                    alert('🏆 Tu evaluación premium se está preparando. Intenta de nuevo en unos momentos.');
	                }
	            })
	            .catch(() => {
	                window.open(quizURL, '_blank');
	            });
	    }
	    
	    // Hacer funciones disponibles globalmente
	    window.openSurveyPage = openSurveyPage;
	    window.openQuizPage = openQuizPage;
	    
	    // Efectos visuales premium
	    document.addEventListener('DOMContentLoaded', () => {
	        // Animación de entrada para las cards
	        const cards = document.querySelectorAll('.card');
	        cards.forEach((card, index) => {
	            card.style.opacity = '0';
	            card.style.transform = 'translateY(20px)';
	            setTimeout(() => {
	                card.style.transition = 'all 0.6s ease';
	                card.style.opacity = '1';
	                card.style.transform = 'translateY(0)';
	            }, index * 100);
	        });
	        
	        // Auto-dismiss para alerts
	        const autoDismissAlerts = document.querySelectorAll('['['/]data-auto-dismiss="true"]');
	        autoDismissAlerts.forEach(alert => {
	            setTimeout(() => {
	                alert.style.transition = 'all 0.5s ease';
	                alert.style.opacity = '0';
	                alert.style.transform = 'translateY(-10px)';
	                setTimeout(() => alert.remove(), 500);
	            }, 5000);
	        });
	    });
	</script>
    
	<!-- Módulos del sistema -->
	<script src="../assets/js/unified-database.js"></script>
	<script src="../assets/js/unified-ui.js"></script>
	<script src="../assets/js/unified-entities.js"></script>
	<script src="../assets/js/unified-surveys.js"></script>
	<script src="../assets/js/unified-app.js"></script>
	
	<!-- Gestores -->
	<script src="../assets/js/data-manager.js"></script>
	
	<!-- Script principal -->
	<script src="../assets/js/app.js"></script>
	<script src="../assets/js/dynamic-page-generator.js"></script>
</body>
</html>
[/file]
[/for]
[/template]